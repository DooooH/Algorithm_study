package string_wordsubsets_psh;

import java.util.*;

class Solution {
	public int[] count(String str) {
		int[] result = new int[26];
		for (int i = 0; i < str.length(); i++) {
			result[str.charAt(i) - 'a']++;
		}
		return result;
	}
	
    public List<String> wordSubsets(String[] A, String[] B) {
        List<String> result = new ArrayList<String>();
        int[] b_max = new int[26];
        
        // b의 문자열들 모두 합치기
        for (String b : B) {
        	int[] b_count = count(b);
        	for (int i = 0; i < 26; i++) {
        		
        	}
        }
        
        for (String a : A) {
        	// 카운트할 배열 생성
        	int[] a_count = count(a);
        	boolean is_substr = true;
        	for (String b : B) {
        		
        		
        		int[] b_count = count(b);
        		for (int i = 0; i < 26; i++) {
            		if (a_count[i] < b_count[i]) {
            			is_substr = false;
            			break;
            		}
        		}
        		if (is_substr == false)
        			break;
        	}
        	if (is_substr == true)
        		result.add(a);
        }
        return result;
    }
    
    public static void main(String[] args) {
		String[] A = {"amazon","apple","facebook","google","leetcode"};
		String[] B = {"e","oo"};
		
		System.out.println(new Solution().wordSubsets(A, B));
	}
}